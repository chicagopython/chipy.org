# Default values for chipy-k8s.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: chipy
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1"


app:
  database:
    # the database host (service) name in the cluster
    host: "chipydb"
    # the port that postgres should listen on
    port: "5432"
    # the logical postgres db name that should be used by chipy app and jobs
    name: "chipy"
    # the name of the k8s secret that will hold the pg username and password
    db_secret_name: "chipy.chipydb.credentials.postgresql.acid.zalan.do"
    # the key in the above k8s secret containing the pg username
    db_secret_username_key: "username"
    # the key in the above k8s secret containing the pg password
    db_secret_password_key: "password"
  env:
    # additional environment variables that will added to the chipy we pod
    DEBUG: "True"
    CONNECT_METHOD: 'http'
    ALLOWED_HOSTS: "chipy-k8s.org,chipy.org,www.chipy.org,localhost"
    EMAIL_BACKEND: "django.core.mail.backends.console.EmailBackend"
    SECURE_SSL_REDIRECT: 'False'
    ENVELOPE_EMAIL_RECIPIENTS: "admin@example.com"
  # The SESSION_KEY needed by Django for signing sessions
  secret_key: "override-this-key-here"
  # hard-coded Django configuration defaults.
  storage:
    use_s3: "False"
    aws_access_key_id: ""
    aws_secret_access_key: ""
    aws_storage_bucket_name: ""
  auth:
    google_oauth2_client_id: ""
    google_oauth2_client_secret: ""
    github_app_id: ""
    github_api_secret: ""
  captcha:
    norecaptcha_site_key: ""
    norecaptcha_secret_key: ""
  # the superuser that will get created by the createsuperuser job
  superuser:
    username: admin
    password: override-me
    email: chipy@example.com

# The size and type of the PV and PVC that will be
# created by this app
volumes:
  storage_class_name: "standard"
  size: "2Gi"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# The type and port that the chipy web service should listen on
service:
  type: ClusterIP
  port: 8000

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chipy-k8s.org
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 250m
    memory: 64Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
